En está entrega, implementamos un árbol recursivo para manejar carpetas y subcarpetas, donde cada carpeta puede contener mensajes.
Elegimos esta estructura porque cada carpeta puede tener subcarpetas y esas subcarpetas a su vez pueden tener otras, como pasa en un sistema de correo. La recursión nos permitió recorrer todo el árbol fácilmente para mostrar la estructura o buscar mensajes.
 .Cada carpeta tiene una lista de mensajes y una lista de subcarpetas. Usamos listas simples porque así se pueden agregar carpetas y mensajes de manera rápida y el código es fácil de entender.
 .Agregar carpetas o mensajes es rápido (O(1)), pero buscar, eliminar o mover mensajes tarda más porque hay que revisar todas las carpetas y mensajes (O(n*m), donde n es la cantidad de carpetas y m la cantidad de mensajes). Lo mismo pasa al buscar todos los mensajes de un remitente.
 .Agregar cosas es rápido, pero las búsquedas pueden ser lentas si hay muchas carpetas o mensajes. Para mejorar esto, se podría usar un índice con un diccionario para que las búsquedas sean más rápidas.
 Elegimos esta estructura porque es clara, fácil de mantener y cumple con los requisitos del enunciado, y además nos permite mejorar la eficiencia en el futuro si es necesario.
